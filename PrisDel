from qiskit import QuantumCircuit, execute, Aer
from qiskit.visualization import plot_histogram

# Initialize a Quantum Circuit with 2 qubits and 2 classical bits
circuit = QuantumCircuit(2, 2)

# Player A (qubit 0) decides to create a superposition of cooperating and defecting
circuit.h(0)

# Player B (qubit 1) decides to defect
circuit.x(1)

# Measure the qubits
circuit.measure([0, 1], [0, 1])

# Use Aer's qasm_simulator
simulator = Aer.get_backend('qasm_simulator')

# Execute the circuits on the qasm simulator
job = execute(circuit, simulator, shots=1000)

# Grab the results from the jobs
result = job.result()

# Get the counts (how many times each possible outcome was obtained)
counts = result.get_counts(circuit)

# Output the results
print('The outcomes are:', counts)

# Plot a histogram
plot_histogram(counts).show()
