from qiskit import QuantumCircuit, Aer, transpile
from qiskit.visualization import plot_histogram
import matplotlib.pyplot as plt

def entangle_qubits(circuit, qubits):
    circuit.h(qubits[0])
    circuit.cx(qubits[0], qubits[1])
    return circuit

def encode_binary(circuit, qubits, binary_value):
    for i, bit in enumerate(binary_value):
        if bit == '1':
            circuit.x(qubits[i])
    return circuit

text = "Hello Quantum World"
n_qubits = 10 * len(text)
circuit = QuantumCircuit(n_qubits, n_qubits)

for i, char in enumerate(text):
    start_idx = i * 10
    entangle_qubits(circuit, [start_idx, start_idx + 1])
    ascii_value = ord(char)
    binary_value = format(ascii_value, '08b')
    encode_binary(circuit, range(start_idx + 2, start_idx + 10), binary_value)

circuit.measure(range(n_qubits), range(n_qubits))

simulator = Aer.get_backend('aer_simulator')
compiled_circuit = transpile(circuit, simulator)
result = simulator.run(compiled_circuit).result()

counts = result.get_counts()
fig = plot_histogram(counts, figsize=(15, 6))

plt.xticks(rotation=90)

# Add the decoded text as the title
decoded_text = "Decoded text: " + text
plt.title(decoded_text, fontsize=12, pad=20)

plt.show()
